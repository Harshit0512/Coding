# O(n)

def max_consecutiveOnes(arr, n):
    res = 0
    curr = 0
    for i in range(n):
        if arr[i] == 0:
            curr = 0
        else:
            curr += 1
            res = max(res, curr)
    return curr

if __name__ == '__main__':
    t = int(input())
    for i in range(t):
        arr = list(map(int, input().split()))
        n = len(arr)
        print(max_consecutiveOnes(arr, n))

# O(n*logn)

def count_ones(arr, n):
    low = 0
    high = n-1
    
    while low <= high:
        mid = (low + high)//2
        if arr[mid] > k:
            high = mid - 1
        elif arr[mid] < k:
            low = mid + 1
        else:
            if (mid == 0 or arr[mid-1] != arr[mid]):
                return (n-mid)
            else:
                high = mid - 1
    return 0

if __name__ == '__main__':
    arr = list(map(int, input().split()))
    print(count_ones(arr, len(arr)))
