# O(n) - time complexity

class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        profit = 0
    
        for i in range(1, len(prices)):
            if prices[i] > prices[i-1]:
                profit += (prices[i] - prices[i-1])
        return profit
        
        
# O(n*n) - time complexity

def max_profit(price, start, end):
    if end <= start:
        return 0
    profit = 0
    
    for i in range(start, end, 1):
        for j in range(i+1, end+1):
            if price[j] > price[i]:
                curr_profit = price[j] - price[i] + max_profit(price, start, i-1) + max_profit(price, j+1, end)
                profit = max(profit, curr_profit)
    return profit


if __name__ == '__main__':
    price = list(map(int, input().split()))
    n = len(price)
    print(max_profit(price, 0, n-1))
